Actualizacion al 24/6

Operativamente se pueden dar de alta pacientes, odontólogos y turnos. Y la funcionalidad está ok.
Los turnos se cargan con ID de Paciente y ID de odontólogo, para facilitar la carga, además realiza la verificacion que existan ambos para poder dar de alta el turno.


PENDIENTES:

>> Agregar los @Valid en los mappings de los controllers que modifican la capa de persistencia (agregar, actualizar).

Chequear los 
@DeleteMapping (que tenga un EntityResponse 204 no content cuando se elimina para diferenciar del 404 cuando no encuentra el Id que se intenta eliminar).
@PutMapping


RESUELTO:

HECHO // Generar paginas ABM para Paciente (incluyendo el domicilio)

Se cambió el formato Json de LocalDateTime y anduvo

Ahora con Postman se puede agregar un turno... ingresando los datos del paciente, los del odontologo, y fecha y hora del turno.

FIXED// Debería en cambio ingresar id de paciente y id de odontologo.  Y verificar que existan, sino no crear el turno.

Si bien Postman me deja crear un turno y da de alta al mismo tiempo paciente y odontologo, otorgándoles un ID.
No puedo recuperar ese ID al hacer listado GET.  //  Arreglado. tuve que agregar: en el service la mención al id. y luego un constructor en el DTO que incluya el id. esto último es porque el service usa el "new TurnoDto" para crear el listado de turnos con lo que trae de la base de datos.

Hay que verificar cómo recuperar ese ID.  agregue el método getId() en los DTO.
Pero debe haber algo en el controller que no maneja esa info. // NO! el problema estaba en el service y en el DTO. Explicado arriba.

Se pudo crear una página funcional de ABM (altas, bajas y modificaciones) para Odontólogo. Sin embargo muestra también los datos en el URL, a pesar de usar método POST.
El odontólogo es correctamente agregado, pero faltaría una página de "response", o bien mediante javascript o ajax modificar el html para mostrar que se agregó.
Quiza este response enmascare el URL con los datos mandandos en el body.


FIXED // Cómo se compatibiliza el tema de que Turno (entity) y el TurnoDTO tienen como atributos un objeto odonotólogo y un objeto paciente,
pero la base de datos correctamente sólo registra el odonotologo_id y paciente_id, entonces ello genera el problema de que para
guardar un nuevo turno tenemos que conocer y generar todos los datos de odontologo y paciente y además el metodo listar,
-suponemos- que por no coincidir el tipo de objetos me da un null, en vez del ID de cada uno.
Se corrigió TurnoDto y en vez de usar un objeto del tipo Odontologo o Paciente se usan Strings.

FIXED // Y para Turnos.  En el caso de turnos, en lugar de generar un nuevo paciente y odontólogo, debería verificar si existen, pasando el ID (primero) o bien DNI y Matricula según sea el caso, y solo generar el turno si ambos existen previamente.

SUSPENDIDO >> Cuando se busca por ID, debería aparecer un botón "BORRAR" al lado de cada objeto recuperado de la lista.
